{"version":3,"file":"main.177e70e4605bb3129049.bundle.js","sources":["webpack:///./modules/menu/react/README.md"],"sourcesContent":["module.exports = \"# Canvas Kit Menu\\n\\nCreates an actions menu of clickable items.\\n\\nCan be used to implement a menu button, context menu, etc. For a full suite of examples, have a look\\nat the\\n[Menu Stories](https://ghe.megaleo.com/pages/design/canvas-kit-react/?path=/story/menu--default).\\n\\n## Coming Soon\\n\\n- Navigation (anchor link) menu support\\n- Multi level menu support\\n\\n## Installation\\n\\n```sh\\nyarn add @workday/canvas-kit-react\\n```\\n\\nor\\n\\n```sh\\nyarn add @workday/canvas-kit-react-menu\\n```\\n\\n# Menu\\n\\nThis component renders Canvas-style menu list.\\n\\n## Usage\\n\\n```tsx\\nimport * as React from 'react';\\nimport {Menu, MenuItem} from '@workday/canvas-kit-react-menu';\\nimport {userIcon} from '@workday/canvas-system-icons-web';\\n\\n<Menu title=\\\"Header\\\" brandUrl=\\\"#\\\">\\n  <MenuItem onClick={yourFirstAction} icon={userIcon} isDisabled={true} hasDivider={false}>\\n    First menu item\\n  </MenuItem>\\n  <MenuItem onClick={yourSecondAction} icon={userIcon} isDisabled={false} hasDivider={true}>\\n    Second menu item\\n  </MenuItem>\\n</Menu>;\\n```\\n\\n## Special Children\\n\\n### `ul, li`\\n\\nFor a semantic menu, this component will style a child `<ul>` element with a role of `menu`. If you\\nimplement your own `<MenuItem>` (see\\n[menu stories](https://ghe.megaleo.com/pages/design/canvas-kit-react/?path=/story/menu--default) for\\nan example), make sure you use a `<li>` with a role of `menuItem`, tabindex of `-1`, and ids that\\nfollow the pattern `${MenuId}-${index}`.\\n\\n## Accessibility\\n\\nThis component implements a actions menu using aria-activedescendant.\\n[See the w3 example here](https://www.w3.org/TR/wai-aria-practices/examples/menu-button/menu-button-actions-active-descendant.html).\\nIf used in conjunction with a menu button you will need to add your own keyboard shortcuts, aria\\nattributes, and focus management. See the\\n[menu stories](https://ghe.megaleo.com/pages/design/canvas-kit-react/?path=/story/menu--default) for\\na fully fledged example.\\n\\n## Keyboard Shortcuts\\n\\n### Enter or Space\\n\\n- Activates the menu item, causing the Last Action textbox to be updated.\\n- Closes the menu.\\n\\n### Escape\\n\\n- Closes the menu.\\n\\n### Up Arrow\\n\\n- Moves focus to the previous menu item.\\n- If focus is on the first menu item, moves focus to the last menu item.\\n\\n### Down Arrow\\n\\n- Moves focus to the next menu item.\\n- If focus is on the last menu item, moves focus to the first menu item.\\n\\n### Home\\n\\n- Moves focus to the first menu item.\\n\\n### End\\n\\n- Moves focus to the last menu item.\\n\\n### A-Z / a-z\\n\\n- Moves focus to the next menu item with a label that starts with the typed character if such an\\n  menu item exists.\\n- Otherwise, focus does not move.\\n\\n## Menu Component Props\\n\\n### Required\\n\\n> None\\n\\n### Optional\\n\\n#### `children: React.ReactElement<MenuItemProps> | React.ReactElement<MenuItemProps>[]`\\n\\n> One or more MenuItem components.\\n\\n---\\n\\n#### `initialSelectedItem: number`\\n\\n> Zero based index of which menu item should initially receive focus\\n\\nDefault: `0`\\n\\n---\\n\\n#### `isOpen: boolean`\\n\\n> Allows you to show and hide the menu from a parent component. Usefully for things like menu\\n> buttons.\\n\\nDefault: `true`\\n\\n---\\n\\n#### `onSelect: () => void`\\n\\n> If specified, this callback is executed after any menu option is selected.\\n\\n---\\n\\n#### `onClose: () => void`\\n\\n> If specified, this callback is executed when the menu should close. Called after an item is\\n> selected or the escape shortcut key is used.\\n\\n---\\n\\n#### `id: string`\\n\\n> A unique id for the menu that is used for aria and html id attributes.\\n\\n---\\n\\n#### `labeledBy: string`\\n\\n> An html id of the element that labels the menu. Often used with menu buttons.\\n\\n---\\n\\n#### `width: number | string`\\n\\n> Width of the card. If nothing is passed in the menu will collapse around the content.\\n\\n---\\n\\n#### `grow: boolean`\\n\\n> Expand menu to fit its container. `grow` takes precedence over `width`.\\n\\nDefault: `false`\\n\\n## Menu Item Component Props\\n\\n### Required\\n\\n> None\\n\\n### Optional\\n\\n#### `onClick: (event: React.SyntheticEvent) => void`\\n\\n> This is the primary action to take when a menu item is clicked. If the item is a child of the Menu\\n> component, this callback will be decorated with the onSelect and onClose Menu callbacks. This\\n> callback will not fire if the item is disabled, see below.\\n\\n---\\n\\n#### `id: string`\\n\\n> The unique id for the menu item used for aria attributes. If the item is a child of the Menu\\n> component, this property will be generated and overridden.\\n\\n---\\n\\n#### `isFocused: boolean`\\n\\n> Whether or not this is the currently selected menu item. If the item is a child of the Menu\\n> component, this property will be generated and overridden.\\n\\n---\\n\\n#### `children: React.ReactNode`\\n\\n> The menu item content is pretty flexible and can contain any strings or JSX.\\n\\n---\\n\\n#### `icon: CanvasSystemIcon`\\n\\n> Icon to be displayed before what you supplied for the children.\\n\\n---\\n\\n#### `secondaryIcon: CanvasSystemIcon`\\n\\n> Icon to be displayed after what you supplied for the children.\\n\\n---\\n\\n#### `hasDivider: boolean`\\n\\n> Adds a top border on the menu item.\\n\\nDefault: `false`\\n\\n---\\n\\n#### `isDisabled: boolean`\\n\\n> Allow you to disable a menu item so it is not clickable.\\n\\nDefault: `false`\\n\\n---\\n\\n#### `role: string`\\n\\n> Allow you to override the role of the item, e.g. you can use this element as a option in a\\n> combobox.\\n\\nDefault: `menuItem`\\n\""],"mappings":"AAAA","sourceRoot":""}